(define-syntax define-struct
  (syntax-rules ()
    ((define-struct "intern" id (field))
      (list `(field ,(->symbol id ":get-" field) ,(->symbol id ":set-" field))))
    ((define-struct "intern" id (field fields ...))
      (++
        (list `(field ,(->symbol id ":get-" field) ,(->symbol id ":set-" field)))
        (define-struct "intern" id (fields ...))))
    ((define-struct id (fields ...))
      (let* ((env (current-env))
             (make (->symbol id ":make-" id))
             (check (->symbol id ":" id "?"))
             (template (++ `(id
                             (,make fields ...)
                             ,check)
                            (define-struct "intern" id (fields ...)))))
            (eval (macro-expand (cons 'define-record-type template)) env)))))
